import os,sys,re,random
from threading import Lock
from concurrent.futures import ThreadPoolExecutor
pool = ThreadPoolExecutor(8)
mutex = Lock()

# 50px/s
danmu_speed = 50

def time2itv(sTime):

    p = "^([0-9]+):([0-5][0-9]):([0-5][0-9])$"
    cp = re.compile(p)

    try:
        mTime = cp.match(sTime)
    except TypeError:
        return 'TypeError'

    if mTime:
        t = list(map(int,mTime.group(1,2,3)))
        return 3600 * t[0] + 60 * t[1] + t[2]
    else:
        return 'ValueError'


def radtext(cout):
    try:
        return ('     '.join(random.sample(text,cout))) * 2
    except:
        return ('     '.join(random.sample(text,len(text)))) * 2



def tr(i):
    fileanme,houzhui=os.path.splitext(i)
    width = os.popen("ffprobe -v error -show_entries stream=width -of csv=p=0 {}/{}".format(sys.argv[1],i)).read().split()[0].strip()
    height = os.popen("ffprobe -v error -show_entries stream=height -of csv=p=0 {}/{}".format(sys.argv[1],i)).read().split()[0].strip()
    sp_time = os.popen('ffmpeg -i {}/{} 2>&1 | grep Duration'.format(sys.argv[1],i)).read().strip().split(' ')[1].split(',')[0].split('.')[0]
    sp_time2s = time2itv(sp_time)
    ass = ['[Script Info]\n',
           '; Script generated by FFmpeg/Lavc58.54.100\n',
           'ScriptType: v4.00+\n',
           'PlayResX: 720\n',
           'PlayResY: 480\n',
           'Collisions: Normal\n',
           '\n',
           '[V4+ Styles]\n',
           'Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n',
           'Style: Default,MicrosoftYaHeiUI,48,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,9,10,10,0,1\n',
           '\n',
           '[Events]\n',
           'Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n',
           'Dialogue: 0,0:00:00.00,0:00:20.00,Default,,0,0,0,Banner;20[;lefttoright;;],\n']
    ass[3] = 'PlayResX: {}\n'.format(width)
    ass[4] = 'PlayResY: {}\n'.format(height)
    danmu_size = int(height) * float(sys.argv[4])
    font_size = danmu_size / (float(sys.argv[4]) * 10)
    ass[9] = 'Style: Default,MicrosoftYaHeiUI,{},&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,20,0,1,1,0,9,10,10,0,1\n'.format(int(font_size))
    ass[-1] = ''
    for n in range(int(float(sys.argv[4]) * 10)):
        ass[9] = '{}Style: Default{},MicrosoftYaHeiUI,{},&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,20,0,1,1,0,9,10,10,{},1\n'.format(ass[9],str(n),(int(font_size) - 20),(int(font_size) * n + 20))
        try:
            danmu_time = (int(font_size) * len(text[n])) / danmu_speed
        except:
            danmu_time = (int(font_size) * len(text[-1])) / danmu_speed
        danmu_count = sp_time2s /int(danmu_time)
        if danmu_count < 1:
            danmu_count = 1
        try:
            ass[-1] = '{}Dialogue: 0,0:00:00.00,{}.00,Default{},,0,0,0,Banner;5[;lefttoright;;],{}\n'.format(ass[-1],(sp_time),n,radtext(danmu_count))
        except:
            ass[-1] = '{}Dialogue: 0,0:00:00.00,{}.00,Default{},,0,0,0,Banner;5[;lefttoright;;],{}\n'.format(ass[-1],(sp_time),n,radtext(danmu_count))
        #for counts in range(int(danmu_count)):
        #    try:
        #        if n > 0:
        #            ass[-1] = '{}Dialogue: 0,0:00:00.00,{}.00,Default{},,0,0,0,Banner;20[;lefttoright;;],{}\n'.format( ass[-1], (sp_time), n, text[n])
        #        ass[-1] = '{}Dialogue: 0,0:00:{}.00,{}.00,Default{},,0,0,0,Banner;20[;lefttoright;;],{}\n'.format(ass[-1],(int(danmu_time) * (counts + 1) + 4),(sp_time),n,text[n])
        #    except:
        #        if n > 0:
        #            ass[-1] = '{}Dialogue: 0,0:00:00.00,{}.00,Default{},,0,0,0,Banner;20[;lefttoright;;],{}\n'.format( ass[-1], (sp_time), n, text[-1])
        #        ass[-1] = '{}Dialogue: 0,0:00:{}.00,{}.00,Default{},,0,0,0,Banner;20[;lefttoright;;],{}\n'.format(ass[-1],(int(danmu_time) * (counts + 1) + 4),(sp_time),n,text[-1])
    if not os.path.exists('{}.ass'.format(fileanme)):
        with open('{}.ass'.format(fileanme),'w')as f:
            for line in ass:
                f.write(line)
    res = os.popen('ffmpeg -i {}/{} -vf subtitles={}.ass -vcodec libx264 {}/dm-{}.ts'.format(sys.argv[1],i,fileanme,sys.argv[2],fileanme)).read().strip()

if __name__ == '__main__':

    text = []
    with open('text.txt','r')as f:
        for txt_line in f.readlines():
            text.append(txt_line.strip())

    list_in = os.listdir(sys.argv[1])
    try:
        num = sys.argv[3]
        list_in = random.sample(list_in,int(num))
    except:
        pass

    for i in list_in:
        pool.submit(tr,i)
    pool.shutdown(wait=True)
